/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.76
 * Generated at: 2023-08-29 05:08:33 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.calendar;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class libCalendar_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(8);
    _jspx_dependants.put("/calendar/../include/header1.jsp", Long.valueOf(1693201543291L));
    _jspx_dependants.put("jar:file:/C:/workspace44/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/library/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/calendar/../include/newaside.jsp", Long.valueOf(1693201543299L));
    _jspx_dependants.put("/calendar/../include/aside3.jsp", Long.valueOf(1693201543268L));
    _jspx_dependants.put("/calendar/../include/footer.jsp", Long.valueOf(1693201543289L));
    _jspx_dependants.put("/calendar/../include/nav.jsp", Long.valueOf(1693201543277L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1689126080262L));
    _jspx_dependants.put("/calendar/../include/header2.jsp", Long.valueOf(1693201543293L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.release();
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>메인2</title>\r\n");
      out.write("</head>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"../css/lib.css\">\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.6.0.js\"></script>\r\n");
      out.write("<script src=\"https://code.jquery.com/ui/1.13.2/jquery-ui.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("\r\n");
      out.write("  h2 {\r\n");
      out.write("    margin: 0 0 15px;\r\n");
      out.write("    font-size: 24px;\r\n");
      out.write("    color: #333;\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  .button-container {\r\n");
      out.write("    display: flex;\r\n");
      out.write("    justify-content: center;\r\n");
      out.write("    align-items: center;\r\n");
      out.write("    margin-top: 10px;\r\n");
      out.write("    padding-bottom: 20px;\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  button {\r\n");
      out.write("    border: none;\r\n");
      out.write("    background-color: #4CAF50;\r\n");
      out.write("    color: white;\r\n");
      out.write("    border-radius: 5px;\r\n");
      out.write("    padding: 10px 20px;\r\n");
      out.write("    cursor: pointer;\r\n");
      out.write("    margin: 0 10px;\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  #monthYear {\r\n");
      out.write("    font-size: 18px;\r\n");
      out.write("    margin: 10px 0;\r\n");
      out.write("    color: #555;\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  .caltable {\r\n");
      out.write("    border-collapse: collapse;\r\n");
      out.write("    width: 800px;\r\n");
      out.write("    margin: auto;\r\n");
      out.write("    border: 1px solid gray; /* Updated border color */\r\n");
      out.write("    padding: 10px;\r\n");
      out.write("    text-align: center;\r\n");
      out.write("    background-color: white; /* Updated background color */\r\n");
      out.write("  }\r\n");
      out.write("    .caltable th, .caltable td {\r\n");
      out.write("    border: 1px solid #EAEAEA; /* 1px 회색 테두리 추가 */\r\n");
      out.write("    padding: 10px;\r\n");
      out.write("    text-align: center;\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  .th {\r\n");
      out.write("    border: 1px solid black;\r\n");
      out.write("    padding: 10px;\r\n");
      out.write("    text-align: center;\r\n");
      out.write("  }\r\n");
      out.write("  \r\n");
      out.write("  .td {\r\n");
      out.write("    border: 1px solid black;\r\n");
      out.write("    padding: 10px;\r\n");
      out.write("    text-align: center;\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  th {\r\n");
      out.write("    background-color: #f2f2f2;\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  td.sunday {\r\n");
      out.write("    color: red;\r\n");
      out.write("  }\r\n");
      out.write("  td.saturday {\r\n");
      out.write("    color: blue;\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  td.today {\r\n");
      out.write("    background-color: #4CAF50;\r\n");
      out.write("    color: white;\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  td.other-month {\r\n");
      out.write("    color: #ccc;\r\n");
      out.write("  }\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("   <header class=\"header1\">\r\n");
      out.write("      ");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      if (_jspx_meth_c_005fset_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\r\n");
      out.write("<link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\r\n");
      out.write("<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\r\n");
      out.write("<link href=\"https://fonts.googleapis.com/css2?family=Noto+Sans+KR:wght@200&display=swap\" rel=\"stylesheet\">\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("\r\n");
      out.write("function fn_logout() {\r\n");
      out.write("	$.ajax({\r\n");
      out.write("		type : \"POST\",\r\n");
      out.write("		data : \"\", //  전송되는 데이터 값은 없다.\r\n");
      out.write("		url : \"/libLogout.do\", \r\n");
      out.write("		\r\n");
      out.write("		datatype : \"text\",\r\n");
      out.write("		success 	 : function(data) {\r\n");
      out.write("			 if(data == \"1\") {\r\n");
      out.write("					alert(\"로그아웃 되었습니다.\");\r\n");
      out.write("					location = \"/\"; // 메인화면으로 이동\r\n");
      out.write("				 }\r\n");
      out.write("			 },\r\n");
      out.write("			error 		 : 	function() {\r\n");
      out.write("				 alert(\"전송실패\");\r\n");
      out.write("			 }\r\n");
      out.write("	});\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<div class=\"libtop\" >\r\n");
      out.write("<a href=\"/\">홈으로</a> | \r\n");
      if (_jspx_meth_c_005fif_005f0(_jspx_page_context))
        return;
      out.write('\r');
      out.write('\n');
      if (_jspx_meth_c_005fif_005f1(_jspx_page_context))
        return;
      out.write('\r');
      out.write('\n');
      if (_jspx_meth_c_005fif_005f2(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("</div> ");
      out.write("\r\n");
      out.write("   </header>\r\n");
      out.write("   <header class=\"header2\">\r\n");
      out.write("      ");
      out.write("\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.6.0.js\"></script>\r\n");
      out.write("<script src=\"https://code.jquery.com/ui/1.13.2/jquery-ui.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<div class=\"libtitle\" >\r\n");
      out.write("<a href=\"/\">하이도서관</a>\r\n");
      out.write("&nbsp;\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<form id=\"searchFrm\" method=\"post\" action=\"/bookRent.do\" style=\"display: inline;\">\r\n");
      out.write("  <input type=\"hidden\" name=\"searchCondition\" id=\"searchCondition\" value=\"title\">\r\n");
      out.write("  \r\n");
      out.write("  <div class=\"input-container\">\r\n");
      out.write("    <div class=\"icon-container\">\r\n");
      out.write("      <img src=\"../icon/inputsearch.gif\" class=\"input-icon\">\r\n");
      out.write("    </div>\r\n");
      out.write("    <input type=\"text\" id=\"searchKeyword\" name=\"searchKeyword\" class=\"search\" onfocus=\"clearIcon()\">\r\n");
      out.write("  </div>\r\n");
      out.write("  <input type=\"submit\" id=\"search\" name=\"search\" class=\"button\" style=\"position: relative; bottom: 9px;\" value=\"검색\">\r\n");
      out.write("</form>\r\n");
      out.write("\r\n");
      out.write("	    <a href=\"/\"><img src=\"../icon/main.gif\" alt=\"search 아이콘\" class=\"mainicon\" style=\"vertical-align: middle;\"></a>\r\n");
      out.write("</div>");
      out.write("\r\n");
      out.write("   </header>\r\n");
      out.write("   <nav class=\"nav\">\r\n");
      out.write("      ");
      out.write("\r\n");
      out.write("    \r\n");
      out.write("    ");
      if (_jspx_meth_c_005fset_005f1(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("    \r\n");
      out.write("  <table class=\"menu-btn\" style=\"width:1200px; align:center;\">\r\n");
      out.write("   		<colgroup>\r\n");
      out.write("			<col width=\"12%\"/>\r\n");
      out.write("			<col width=\"15%\"/>\r\n");
      out.write("			<col width=\"15%\"/>\r\n");
      out.write("			<col width=\"15%\"/>\r\n");
      out.write("			<col width=\"15%\"/>\r\n");
      out.write("			<col width=\"15%\"/>\r\n");
      out.write("			<col width=\"13%\"/>\r\n");
      out.write("		</colgroup>\r\n");
      out.write("    \r\n");
      out.write("    <tr>\r\n");
      out.write("      <td><a href=\"#\"></a></td>\r\n");
      out.write("      <td><a href=\"/guide.do\">이용안내</a></td>\r\n");
      out.write("      <td><a href=\"/bookSearch.do\">자료검색</a></td>\r\n");
      out.write("      <td><a href=\"/libNoticeList2.do\">도서관소식</a></td>\r\n");
      out.write("      <td><a href=\"/libReserve.do\">신청서비스</a></td>\r\n");
      out.write("      <td>\r\n");
      out.write("      ");
      if (_jspx_meth_c_005fif_005f3(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("      ");
      if (_jspx_meth_c_005fif_005f4(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("      </td>\r\n");
      out.write("      <td><a href=\"#\"></a></td>\r\n");
      out.write("    </tr>\r\n");
      out.write("  </table>\r\n");
      out.write("  <ul class=\"menu-list\">\r\n");
      out.write("   		<table width=\"1200px;\" style=\"font-size:20px;\">\r\n");
      out.write("	   		<colgroup>\r\n");
      out.write("				<col width=\"12%\"/>\r\n");
      out.write("				<col width=\"15%\"/>\r\n");
      out.write("				<col width=\"15%\"/>\r\n");
      out.write("				<col width=\"15%\"/>\r\n");
      out.write("				<col width=\"15%\"/>\r\n");
      out.write("				<col width=\"15%\"/>\r\n");
      out.write("				<col width=\"13%\"/>\r\n");
      out.write("			</colgroup>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td><a href=\"#\"></a></td>\r\n");
      out.write("				<td><a href=\"/libMap.do\">오시는길</a></td>\r\n");
      out.write("				<td><a href=\"/bookSearch.do\">통합검색</a></td>\r\n");
      out.write("				<td><a href=\"/libNoticeList2.do\">공지사항</a></td>\r\n");
      out.write("				<td><a href=\"/libReserve.do\">열람실</a></td>\r\n");
      out.write("				<td>\r\n");
      out.write("				");
      if (_jspx_meth_c_005fif_005f5(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("			    ");
      if (_jspx_meth_c_005fif_005f6(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("				</td>\r\n");
      out.write("				<td><a href=\"#\"></a></td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td><a href=\"#\"></a></td>\r\n");
      out.write("				<td><a href=\"/guide.do\">이용시간</a></td>\r\n");
      out.write("				<td><a href=\"/bookRent.do\">대여하기</a></td>\r\n");
      out.write("				<td><a href=\"/libEventList2.do\">문화행사</a></td>\r\n");
      out.write("				\r\n");
      out.write("				<td><a href=\"/voluntary.do\">자원봉사신청</a></td>\r\n");
      out.write("				<td><a href=\"/libArchive.do?session_id=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${session_id }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">열람실기록</a></td>\r\n");
      out.write("				<td><a href=\"#\"></a></td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td><a href=\"#\"></a></td>\r\n");
      out.write("				<td><a href=\"/reserveGuide.do\">열람실이용</a></td>\r\n");
      out.write("				<td><a href=\"/newBook.do\">신착도서</a></td>\r\n");
      out.write("				<td><a href=\"/libCalendar.do\">일정</a></td>\r\n");
      out.write("				<td><a href=\"/tourGuide.do\">도서견학신청</a></td>\r\n");
      out.write("				<td>\r\n");
      out.write("				");
      if (_jspx_meth_c_005fif_005f7(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("				</td>\r\n");
      out.write("				<td><a href=\"#\"></a></td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td><a href=\"#\"></a></td>\r\n");
      out.write("				<td><a href=\"/rentGuide.do\">대출/반납</a></td>\r\n");
      out.write("				<td><a href=\"/popularBook.do\">인기도서</a></td>\r\n");
      out.write("				<td><a href=\"#\"></a></td>\r\n");
      out.write("				<td><a href=\"#\"></a></td>\r\n");
      out.write("				<td><a href=\"#\"></a></td>\r\n");
      out.write("				<td><a href=\"#\"></a></td>\r\n");
      out.write("			</tr>\r\n");
      out.write("		</table>\r\n");
      out.write("  </ul>");
      out.write("\r\n");
      out.write("   </nav>\r\n");
      out.write("   <section class=\"section1\">\r\n");
      out.write("      <div class=\"sec1\">\r\n");
      out.write("            <aside class=\"aside\">\r\n");
      out.write("               ");
      out.write("\r\n");
      out.write("		<table style=\"border-collapse: collapse;width:220px;\">\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td style=\"font-size:35px;height:180px; background-size: cover;\">\r\n");
      out.write("				<a href=\"/libNoticeList.do\">도서관소식</a>\r\n");
      out.write("				</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td height=\"80\"><a href=\"/libNoticeList.do\">공지사항</a></td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td height=\"80\"><a href=\"/libEventList.do\">문화행사</a></td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td height=\"80\"><a href=\"/libCalendar.do\">일정</a></td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td height=\"80\"></td>\r\n");
      out.write("			</tr>\r\n");
      out.write("		</table>");
      out.write("\r\n");
      out.write("            </aside>\r\n");
      out.write("            <div class=\"flex-item\">\r\n");
      out.write("               <div class=\"container\" style=\"border:0px solid black; margin-left:300px;\" >\r\n");
      out.write("               <div class=\"content_area\">\r\n");
      out.write("            \r\n");
      out.write("	            <script>\r\n");
      out.write("				document.addEventListener(\"DOMContentLoaded\", function() {\r\n");
      out.write("					\r\n");
      out.write("					\r\n");
      out.write("					  const calendarBody = document.querySelector(\"#calendar tbody\");\r\n");
      out.write("					  const beforeMonthBtn = document.querySelector(\"#beforeMonth\");\r\n");
      out.write("					  const nextMonthBtn = document.querySelector(\"#nextMonth\");\r\n");
      out.write("					  const monthYearDisplay = document.querySelector(\"#monthYearDisplay\");\r\n");
      out.write("				\r\n");
      out.write("					  \r\n");
      out.write("					  const currentDate = new Date();\r\n");
      out.write("					  const currentYear = currentDate.getFullYear();\r\n");
      out.write("					  const currentMonth = currentDate.getMonth() + 1; // JavaScript의 월은 0부터 시작하므로 1을 더해줍니다.\r\n");
      out.write("					  \r\n");
      out.write("					  // resultList 변수를 JavaScript 배열로 초기화\r\n");
      out.write("					  const resultList = [\r\n");
      out.write("					    ");
      if (_jspx_meth_c_005fforEach_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("					  ];\r\n");
      out.write("					  \r\n");
      out.write("					  function generateCalendar(year, month) {\r\n");
      out.write("					    const firstDay = new Date(year, month, 1);\r\n");
      out.write("					    const lastDay = new Date(year, month + 1, 0);\r\n");
      out.write("					    const today = new Date();\r\n");
      out.write("				\r\n");
      out.write("					    calendarBody.innerHTML = \"\";\r\n");
      out.write("				\r\n");
      out.write("					    let day = 1;\r\n");
      out.write("					    for (let i = 0; i < 6; i++) {\r\n");
      out.write("					      const row = document.createElement(\"tr\");\r\n");
      out.write("					      for (let j = 0; j < 7; j++) {\r\n");
      out.write("					        const cell = document.createElement(\"td\");\r\n");
      out.write("				\r\n");
      out.write("					        if ((i === 0 && j < firstDay.getDay()) || day > lastDay.getDate()) {\r\n");
      out.write("					          cell.textContent = \"\";\r\n");
      out.write("					          cell.classList.add(\"other-month\");\r\n");
      out.write("					        } else {\r\n");
      out.write("					          cell.textContent = day;\r\n");
      out.write("					          if (today.getFullYear() === year && today.getMonth() === month && today.getDate() === day) {\r\n");
      out.write("					            cell.classList.add(\"today\");\r\n");
      out.write("					          }\r\n");
      out.write("					          if (j === 0) {\r\n");
      out.write("					            cell.classList.add(\"sunday\");\r\n");
      out.write("					          }\r\n");
      out.write("					          \r\n");
      out.write("					          if (j === 6) {\r\n");
      out.write("					            cell.classList.add(\"saturday\");\r\n");
      out.write("					          }\r\n");
      out.write("					          \r\n");
      out.write("					          if ((i === 1  || i === 3 ) && j == 6) {\r\n");
      out.write("					              const holidayText = document.createElement(\"div\");\r\n");
      out.write("					              holidayText.textContent = \"휴관일\";\r\n");
      out.write("					              cell.appendChild(holidayText);\r\n");
      out.write("					            }\r\n");
      out.write("					          \r\n");
      out.write("					          \r\n");
      out.write("					          cell.style.position = \"relative\"; // 셀 내부의 상대적 위치 설정\r\n");
      out.write("					          cell.style.textAlign = \"left\"; // 내용 왼쪽 정렬\r\n");
      out.write("					          cell.style.verticalAlign = \"top\"; // 내용 위쪽 정렬\r\n");
      out.write("					          \r\n");
      out.write("					          // resultList를 사용하여 셀 내용을 업데이트\r\n");
      out.write("					          for (const item of resultList) {\r\n");
      out.write("								    if (year === item.year && month === item.month - 1 && day === item.day) { // JavaScript에서 month는 0부터 시작하기 때문에 -1을 해줘야 함\r\n");
      out.write("								        const link = document.createElement(\"a\"); // <a> 태그 생성\r\n");
      out.write("								        link.href = \"/libCalDetail.do?unq=\" + item.unq; // 링크 주소 설정\r\n");
      out.write("								        link.style.color = \"brown\"; // 링크 색상 설정\r\n");
      out.write("								        link.textContent = item.title; // 링크 텍스트 설정\r\n");
      out.write("								        link.style.fontSize = \"13px\"; // 링크 폰트 크기\r\n");
      out.write("								        link.style.textDecoration = \"none\"; // 밑줄 없애기\r\n");
      out.write("								\r\n");
      out.write("								        cell.style.color = \"brown\";\r\n");
      out.write("								\r\n");
      out.write("								        cell.innerHTML = item.day; // 기존 내용\r\n");
      out.write("								        cell.appendChild(link); // 셀 내에 링크 추가\r\n");
      out.write("								\r\n");
      out.write("								        const br = document.createElement(\"br\"); // <br> 태그 생성\r\n");
      out.write("								        cell.appendChild(br); // <br> 태그 추가\r\n");
      out.write("								        cell.appendChild(link); // 셀 내에 링크 추가\r\n");
      out.write("								\r\n");
      out.write("								        // 다른 데이터들을 같은 셀에 개행하여 출력\r\n");
      out.write("								        for (const otherItem of resultList) {\r\n");
      out.write("								            if (year === otherItem.year && month === otherItem.month - 1 && day === otherItem.day && otherItem.unq !== item.unq) {\r\n");
      out.write("								                const otherLink = document.createElement(\"a\"); // <a> 태그 생성\r\n");
      out.write("								                otherLink.href = \"/libCalDetail.do?unq=\" + otherItem.unq; // 링크 주소 설정\r\n");
      out.write("								                otherLink.style.color = \"brown\"; // 링크 색상 설정\r\n");
      out.write("								                otherLink.textContent = otherItem.title; // 링크 텍스트 설정\r\n");
      out.write("								                otherLink.style.fontSize = \"13px\"; // 링크 폰트 크기\r\n");
      out.write("								                otherLink.style.textDecoration = \"none\"; // 밑줄 없애기\r\n");
      out.write("								\r\n");
      out.write("								                const otherBr = document.createElement(\"br\"); // <br> 태그 생성\r\n");
      out.write("								                cell.appendChild(otherBr); // <br> 태그 추가\r\n");
      out.write("								                cell.appendChild(otherLink); // 다른 데이터의 링크 추가\r\n");
      out.write("								            }\r\n");
      out.write("								        }\r\n");
      out.write("								\r\n");
      out.write("								        break;\r\n");
      out.write("								    }\r\n");
      out.write("								}\r\n");
      out.write("					          \r\n");
      out.write("					          day++;\r\n");
      out.write("					          cell.style.width = \"100px\"; // 셀 너비 설정\r\n");
      out.write("					          cell.style.height = \"100px\"; // 셀 높이 설정\r\n");
      out.write("					          cell.style.boxSizing = \"border-box\"; // 셀 크기 계산 시 border와 padding을 포함하도록 설정\r\n");
      out.write("					        }\r\n");
      out.write("				\r\n");
      out.write("					        row.appendChild(cell);\r\n");
      out.write("					      }\r\n");
      out.write("					      calendarBody.appendChild(row);\r\n");
      out.write("					      if (day > lastDay.getDate()) {\r\n");
      out.write("					        break;\r\n");
      out.write("					      }\r\n");
      out.write("					    }\r\n");
      out.write("				\r\n");
      out.write("					    monthYearDisplay.textContent = year + \"년 \" + (month + 1) + \"월\";\r\n");
      out.write("					  }\r\n");
      out.write("				\r\n");
      out.write("					  function updateCalendar() {\r\n");
      out.write("					    generateCalendar(currentDate.getFullYear(), currentDate.getMonth());\r\n");
      out.write("					  }\r\n");
      out.write("				\r\n");
      out.write("					  beforeMonthBtn.addEventListener(\"click\", function() {\r\n");
      out.write("					    currentDate.setMonth(currentDate.getMonth() - 1);\r\n");
      out.write("					    updateCalendar();\r\n");
      out.write("					  });\r\n");
      out.write("				\r\n");
      out.write("					  nextMonthBtn.addEventListener(\"click\", function() {\r\n");
      out.write("					    currentDate.setMonth(currentDate.getMonth() + 1);\r\n");
      out.write("					    updateCalendar();\r\n");
      out.write("					  });\r\n");
      out.write("				\r\n");
      out.write("					  updateCalendar();\r\n");
      out.write("					});\r\n");
      out.write("				</script>\r\n");
      out.write("				\r\n");
      out.write("				<div data-resultList=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${resultList}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("				  <h2>달력</h2>\r\n");
      out.write("				  \r\n");
      out.write("				  <div id=\"button-container\" class=\"button-container\">\r\n");
      out.write("				    <button id=\"beforeMonth\">이전 달</button>\r\n");
      out.write("				    <span id=\"monthYearDisplay\"></span>\r\n");
      out.write("				    <button id=\"nextMonth\">다음 달</button>\r\n");
      out.write("				  </div>\r\n");
      out.write("				  \r\n");
      out.write("				  <table id=\"calendar\" class=\"caltable\">\r\n");
      out.write("				    <thead>\r\n");
      out.write("				      <tr>\r\n");
      out.write("				        <th>일</th>\r\n");
      out.write("				        <th>월</th>\r\n");
      out.write("				        <th>화</th>\r\n");
      out.write("				        <th>수</th>\r\n");
      out.write("				        <th>목</th>\r\n");
      out.write("				        <th>금</th>\r\n");
      out.write("				        <th class=\"weekend\">토</th>\r\n");
      out.write("				      </tr>\r\n");
      out.write("				    </thead>\r\n");
      out.write("				    <tbody>\r\n");
      out.write("				    </tbody>\r\n");
      out.write("				  </table>\r\n");
      out.write("				 \r\n");
      out.write("				</div>\r\n");
      out.write("              \r\n");
      out.write("               </div>\r\n");
      out.write("               </div>\r\n");
      out.write("            </div>\r\n");
      out.write("      </div>\r\n");
      out.write("   </section>\r\n");
      out.write("   \r\n");
      out.write("   <footer class=\"footer\">\r\n");
      out.write("         ");
      out.write("\r\n");
      out.write("남양주시평생학습원사업자번호 : 132-83-05566대표자 : 이순덕<br>\r\n");
      out.write("주소 : 경기도 남양주시 다산중앙로82번안길 138(다산동 정약용도서관)<br>\r\n");
      out.write("진건도서관경기도 남양주시 진건읍 진건오남로 41-25TEL : 031-590-8260<br>\r\n");
      out.write("Copyright © 남양주시평생학습원. ALL RIGHTS RESERVED.<br>");
      out.write("\r\n");
      out.write("   </footer>\r\n");
      out.write("   <aside class=\"new-aside\">\r\n");
      out.write("    ");
      out.write("\r\n");
      out.write("		\r\n");
      out.write("<script>\r\n");
      out.write("window.onload = function() {\r\n");
      out.write("  showScrollTopImage();\r\n");
      out.write("};\r\n");
      out.write("\r\n");
      out.write("window.onscroll = function() {\r\n");
      out.write("  showScrollTopImage();\r\n");
      out.write("};\r\n");
      out.write("\r\n");
      out.write("var scrollTimeout;\r\n");
      out.write("\r\n");
      out.write("function showScrollTopImage() {\r\n");
      out.write("  clearTimeout(scrollTimeout);\r\n");
      out.write("  var scrollImg = document.querySelector(\".scroll-top-img\");\r\n");
      out.write("  if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {\r\n");
      out.write("    scrollImg.classList.add(\"visible\");\r\n");
      out.write("  } else {\r\n");
      out.write("    scrollTimeout = setTimeout(function() {\r\n");
      out.write("      scrollImg.classList.remove(\"visible\");\r\n");
      out.write("    }, 300);\r\n");
      out.write("  }\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function scrollToTop() {\r\n");
      out.write("  document.body.scrollTop = 0;\r\n");
      out.write("  document.documentElement.scrollTop = 0;\r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<!-- 이미지를 클릭하여 위로 이동하는 링크 -->\r\n");
      out.write("<a href=\"javascript:void(0);\" onclick=\"scrollToTop()\" class=\"scroll-top-img\">\r\n");
      out.write("  <img src=\"../icon/up.gif\" alt=\"up 아이콘\" class=\"icon\"><br>\r\n");
      out.write("  위로가기\r\n");
      out.write("</a>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("   </aside>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fset_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:set
    org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f0 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
    boolean _jspx_th_c_005fset_005f0_reused = false;
    try {
      _jspx_th_c_005fset_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fset_005f0.setParent(null);
      // /calendar/../include/header1.jsp(5,0) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setVar("s_userid");
      // /calendar/../include/header1.jsp(5,0) name = value type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setValue(new org.apache.jasper.el.JspValueExpression("/calendar/../include/header1.jsp(5,0) '${sessionScope.SessionUserID }'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${sessionScope.SessionUserID }",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int _jspx_eval_c_005fset_005f0 = _jspx_th_c_005fset_005f0.doStartTag();
      if (_jspx_th_c_005fset_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f0);
      _jspx_th_c_005fset_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fset_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fset_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f0_reused = false;
    try {
      _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f0.setParent(null);
      // /calendar/../include/header1.jsp(37,0) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${s_userid == null }", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
      if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("	<a href=\"/libConditions.do\">회원가입</a> |\r\n");
          out.write("	<a href=\"/libLoginWrite.do\"><b>로그인</b></a>\r\n");
          int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
      _jspx_th_c_005fif_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f1 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f1_reused = false;
    try {
      _jspx_th_c_005fif_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f1.setParent(null);
      // /calendar/../include/header1.jsp(41,0) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f1.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${s_userid != null && s_userid != 'admin' }", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f1 = _jspx_th_c_005fif_005f1.doStartTag();
      if (_jspx_eval_c_005fif_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("	<a href=\"/libMemberDetail.do\">내 정보</a> |\r\n");
          out.write("	<a href=\"javascript:fn_logout()\"><b>로그아웃</b></a>\r\n");
          int evalDoAfterBody = _jspx_th_c_005fif_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f1);
      _jspx_th_c_005fif_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f2(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f2 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f2_reused = false;
    try {
      _jspx_th_c_005fif_005f2.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f2.setParent(null);
      // /calendar/../include/header1.jsp(45,0) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f2.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${s_userid == 'admin' }", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f2 = _jspx_th_c_005fif_005f2.doStartTag();
      if (_jspx_eval_c_005fif_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("	<a href=\"/adminMain.do\" style=\"color: red; font-weight: bold;\">관리자모드</a> |\r\n");
          out.write("	<a href=\"javascript:fn_logout()\"><b>로그아웃</b></a>\r\n");
          int evalDoAfterBody = _jspx_th_c_005fif_005f2.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f2);
      _jspx_th_c_005fif_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f2, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f2_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fset_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:set
    org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f1 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
    boolean _jspx_th_c_005fset_005f1_reused = false;
    try {
      _jspx_th_c_005fset_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fset_005f1.setParent(null);
      // /calendar/../include/nav.jsp(4,4) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f1.setVar("session_id");
      // /calendar/../include/nav.jsp(4,4) name = value type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f1.setValue(new org.apache.jasper.el.JspValueExpression("/calendar/../include/nav.jsp(4,4) '${sessionScope.SessionUserID }'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${sessionScope.SessionUserID }",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int _jspx_eval_c_005fset_005f1 = _jspx_th_c_005fset_005f1.doStartTag();
      if (_jspx_th_c_005fset_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f1);
      _jspx_th_c_005fset_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fset_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fset_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f3(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f3 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f3_reused = false;
    try {
      _jspx_th_c_005fif_005f3.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f3.setParent(null);
      // /calendar/../include/nav.jsp(24,6) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f3.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${s_userid == null }", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f3 = _jspx_th_c_005fif_005f3.doStartTag();
      if (_jspx_eval_c_005fif_005f3 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("      	<a href=\"/libLoginWrite.do\">나의 도서관</a> \r\n");
          out.write("      ");
          int evalDoAfterBody = _jspx_th_c_005fif_005f3.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f3);
      _jspx_th_c_005fif_005f3_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f3, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f3_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f4(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f4 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f4_reused = false;
    try {
      _jspx_th_c_005fif_005f4.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f4.setParent(null);
      // /calendar/../include/nav.jsp(27,6) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f4.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${s_userid != null }", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f4 = _jspx_th_c_005fif_005f4.doStartTag();
      if (_jspx_eval_c_005fif_005f4 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("      	<a href=\"/myBookList.do\">나의 도서관</a> \r\n");
          out.write("      ");
          int evalDoAfterBody = _jspx_th_c_005fif_005f4.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f4.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f4);
      _jspx_th_c_005fif_005f4_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f4, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f4_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f5(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f5 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f5_reused = false;
    try {
      _jspx_th_c_005fif_005f5.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f5.setParent(null);
      // /calendar/../include/nav.jsp(52,4) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f5.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${s_userid == null }", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f5 = _jspx_th_c_005fif_005f5.doStartTag();
      if (_jspx_eval_c_005fif_005f5 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("			    	<a href=\"/libLoginWrite.do\">대여목록</a> \r\n");
          out.write("			    ");
          int evalDoAfterBody = _jspx_th_c_005fif_005f5.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f5.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f5);
      _jspx_th_c_005fif_005f5_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f5, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f5_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f6(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f6 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f6_reused = false;
    try {
      _jspx_th_c_005fif_005f6.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f6.setParent(null);
      // /calendar/../include/nav.jsp(55,7) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f6.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${s_userid != null }", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f6 = _jspx_th_c_005fif_005f6.doStartTag();
      if (_jspx_eval_c_005fif_005f6 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("			    	<a href=\"/myBookList.do\">대여목록</a> \r\n");
          out.write("			    ");
          int evalDoAfterBody = _jspx_th_c_005fif_005f6.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f6.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f6);
      _jspx_th_c_005fif_005f6_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f6, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f6_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f7(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f7 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f7_reused = false;
    try {
      _jspx_th_c_005fif_005f7.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f7.setParent(null);
      // /calendar/../include/nav.jsp(78,4) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f7.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${s_userid != 'admin' }", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f7 = _jspx_th_c_005fif_005f7.doStartTag();
      if (_jspx_eval_c_005fif_005f7 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("                	<a href=\"/libMemberDetail.do\">내 정보</a>\r\n");
          out.write("                ");
          int evalDoAfterBody = _jspx_th_c_005fif_005f7.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f7.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f7);
      _jspx_th_c_005fif_005f7_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f7, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f7_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fforEach_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f0_reused = false;
    try {
      _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f0.setParent(null);
      // /calendar/libCalendar.jsp(132,9) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVar("list");
      // /calendar/libCalendar.jsp(132,9) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setItems(new org.apache.jasper.el.JspValueExpression("/calendar/libCalendar.jsp(132,9) '${resultList}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${resultList}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      // /calendar/libCalendar.jsp(132,9) name = varStatus type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVarStatus("status");
      int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
        if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("					      { unq : ");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${list.unq}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write(",\r\n");
            out.write("					        year: ");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${list.year}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write(",\r\n");
            out.write("					        month: ");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${list.month}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write(",\r\n");
            out.write("					        day: ");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${list.day}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write(",\r\n");
            out.write("					        title: \"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${list.title}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\",\r\n");
            out.write("					        \r\n");
            out.write("					      },\r\n");
            out.write("					    ");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
      _jspx_th_c_005fforEach_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f0_reused);
    }
    return false;
  }
}
